#include<stdio.h>
#include<unistd.h>
#include<string.h>
#include<conio.h>
/*TEST CASES
NO. OF STUDENT PROCESSES=4
PROCESS    BT    AT
   1        9     0
   2        5     1
   3        3     2
   4        4     3
   
   NO. OF FACULTY PROCESSES=4
PROCESS    BT    AT
   1        9     0
   2        5     1
   3        3     2
   4        4     3
   */
int main(){ 	
  long d;
	char a,c[11];int o;int r=0;
	char pass[]="yashu@29";//password to be entered
	pass:
	printf("ENTER THE ID \n    ");
	scanf("%ld",&d);
	printf("ENTER THE PASSWORD \n\t ");
	while(1)
	{  
	a=getch();
	if(a==13){
	printf("\n");
	break;}
	
		c[r]=a;
		
		
			printf("*");
			r++;
	}
		
		o=strcmp(c,pass);
	if(d==11610846)	{
		 if(o==0){
			printf("Successfully Logged-In \n\n");
			printf("WELCOME SUDESH SHARMA\n\n");
int i,m,n,tq,tq1;
printf("Enter number of student queries\n");
scanf("%d",&n);
printf("Enter number of faculty queries\n");
scanf("%d",&m);
int q1[n],q2[m];
int P[n],Pr[m],bt[n],at[n],rmt[n],bt1[n],at1[n],rt[m];
printf("------STUDENT'S  QUERIES:------\n\n");
for(i=0;i<n;i++)
{
printf("Enter query id for student query no. %d = ",i+1,"\n\n");
printf("S");
scanf("%d",&P[i]);
q1[i]=P[i];
printf("\n\nEnter Burst time for solving this query = ");
scanf("%d",&bt[i]);
printf("\n\nEnter the Arrival time for query S%d =",P[i]);
scanf("%d",&at[i]);
printf("\n\n");
}
printf("\n\n");
printf("------FACULTY'S  QUERIES:------\n\n");
for(i=0;i<m;i++)
{
printf("\n\nEnter query id for faculty query no. %d = ",i+1,"\n");
printf("F");
scanf("%d",&Pr[i]);
q2[i]=Pr[i];
printf("\n\nEnter Burst time for solving this query = ");
scanf("%d",&bt1[i]);
printf("\n\nEnter the Arrival time for query F%d =",Pr[i]);
scanf("%d",&at1[i]);
printf("\n\n");
}
printf("\n\n");
printf("____________________________________________________\n");
printf("|	STUDENT'S QUEUE	  Burst time	Arrival time|\n");
printf("|___________________________________________________|\n");
for(i=0;i<n;i++){
printf("      	 S%d	    	  %d	    	 %d\n",P[i],bt[i],at[i]);
}
printf("____________________________________________________\n\n");

printf("____________________________________________________\n");
printf("|	FACULTY'S QUEUE	  Burst time	Arrival time|\n");
printf("|___________________________________________________|\n");
for(i=0;i<m;i++){
printf("      	 F%d	    	  %d	    	 %d\n",Pr[i],bt1[i],at1[i]);
}
printf("____________________________________________________\n\n");

printf("\n\nGIVE PRIORITY FOR STUDENT QUERIES\n\n");
int ch;
scanf("%d",&ch);
if(ch==1){
printf("\n\nSINCE THERE ARE  MULTIPLE REQUESTS,SO YOU NEED TO GIVE A FAIR SHARE OF TIME\n\n");

printf("Enter Time Quantum you want to give for each student query= ");
scanf("%d",&tq);
printf("\n\n Turnaround time means --> Total time taken to solve each query....\n\n");
int t,remain,flag=0;
int waiting_time=0,turn_time=0;
remain=n;
for(i=0;i<n;i++){
	rmt[i]=bt[i];
}
printf("\n\n------------SOLVING STUDENT QUERIES------------------\n\n");

printf("\n\nProcess\t | Turnaround time | Waiting time\n\n");
for(t=0,i=0;remain!=0;)
{
if(rmt[i]<=tq && rmt[i]>0)
{
t=t+rmt[i];
rmt[i]=0;
flag=1;
}
else if(rmt[i]>0)
{
rmt[i]=rmt[i]-tq;
t=t+tq;
}
if(rmt[i]==0 && flag==1)
{
remain--;
printf("S%d\t | \t%d\t | \t%d\n",i+1,t-at[i],t-at[i]-bt[i]);
waiting_time=waiting_time+t-at[i]-bt[i];
turn_time=turn_time+t-at[i];
flag=0;
}
if(i==n-1)
i=0;
else if(at[i+1]<=t)
i++;
else
i=0;
}
if(n==0){
printf("\nAverage waiting time= %d\n",0);
printf("\nAverage turnaround time= %d\n",0);	
}
else{
printf("\nAverage waiting time= %f\n",waiting_time*1.0/n);
printf("\nAverage turnaround time= %f\n",turn_time*1.0/n);
}
printf("\n\n Enter Time Quantum you want to give for each faculty query= ");
scanf("%d",&tq1);
int t1,remain1,flag1=0;
int waiting_time1=0,turn_time1=0;
remain1=m;
for(i=0;i<m;i++){
	rt[i]=bt1[i];
}
printf("\n\n------------SOLVING FACULTY QUERIES------------------\n\n");

printf("\n\nProcess\t|Turnaround time|Waiting time\n\n");
for(t1=0,i=0;remain1!=0;)
{
if(rt[i]<=tq1 && rt[i]>0)
{
t1=t1+rt[i];
rt[i]=0;
flag1=1;
}
else if(rt[i]>0)
{
rt[i]=rt[i]-tq1;
t1=t1+tq1;
}
if(rt[i]==0 && flag1==1)
{
remain1--;
printf("F%d\t|\t%d\t|\t%d\n",i+1,t1-at1[i],t1-at1[i]-bt1[i]);
waiting_time1=waiting_time1+t1-at1[i]-bt1[i];
turn_time1=turn_time1+t1-at1[i];
flag1=0;
}
if(i==m-1)
i=0;
else if(at1[i+1]<=t1)
i++;
else
i=0;
}
if(m==0){
printf("\nAverage waiting time= %d\n",0);
printf("\nAverage turnaround time= %d\n",0);	
}
else{
printf("\nAverage waiting time= %f\n",waiting_time1*1.0/m);
printf("\nAverage turnaround time= %f\n",turn_time1*1.0/m);
}}
else if(ch==2)
{
	printf("\n\nSINCE THERE ARE  MULTIPLE REQUESTS,SO YOU NEED TO GIVE A FAIR SHARE OF TIME\n\n");
	printf("\n\n Enter Time Quantum you want to give for each faculty query= ");
scanf("%d",&tq1);
int t1,remain1,flag1=0;
int waiting_time1=0,turn_time1=0;
remain1=m;
for(i=0;i<m;i++){
	rt[i]=bt1[i];
}
printf("\n\n------------SOLVING FACULTY QUERIES------------------\n\n");

printf("\n\nProcess\t|Turnaround time|Waiting time\n\n");
for(t1=0,i=0;remain1!=0;)
{
if(rt[i]<=tq1 && rt[i]>0)
{
t1=t1+rt[i];
rt[i]=0;
flag1=1;
}
else if(rt[i]>0)
{
rt[i]=rt[i]-tq1;
t1=t1+tq1;
}
if(rt[i]==0 && flag1==1)
{
remain1--;
printf("F%d\t|\t%d\t|\t%d\n",i+1,t1-at1[i],t1-at1[i]-bt1[i]);
waiting_time1=waiting_time1+t1-at1[i]-bt1[i];
turn_time1=turn_time1+t1-at1[i];
flag1=0;
}
if(i==m-1)
i=0;
else if(at1[i+1]<=t1)
i++;
else
i=0;
}
if(m==0){
printf("\nAverage waiting time= %d\n",0);
printf("\nAverage turnaround time= %d\n",0);	
}
else{
printf("\nAverage waiting time= %f\n",waiting_time1*1.0/m);
printf("\nAverage turnaround time= %f\n",turn_time1*1.0/m);
}
printf("Enter Time Quantum you want to give for each student query= ");
scanf("%d",&tq);
printf("\n\n Turnaround time means --> Total time taken to solve each query....\n\n");
int t,remain,flag=0;
int waiting_time=0,turn_time=0;
remain=n;
for(i=0;i<n;i++){
	rmt[i]=bt[i];
}
printf("\n\n------------SOLVING STUDENT QUERIES------------------\n\n");

printf("\n\nProcess\t | Turnaround time | Waiting time\n\n");
for(t=0,i=0;remain!=0;)
{
if(rmt[i]<=tq && rmt[i]>0)
{
t=t+rmt[i];
rmt[i]=0;
flag=1;
}
else if(rmt[i]>0)
{
rmt[i]=rmt[i]-tq;
t=t+tq;
}
if(rmt[i]==0 && flag==1)
{
remain--;
printf("S%d\t | \t%d\t | \t%d\n",i+1,t-at[i],t-at[i]-bt[i]);
waiting_time=waiting_time+t-at[i]-bt[i];
turn_time=turn_time+t-at[i];
flag=0;
}
if(i==n-1)
i=0;
else if(at[i+1]<=t)
i++;
else
i=0;
}
if(n==0){
printf("\nAverage waiting time= %d\n",0);
printf("\nAverage turnaround time= %d\n",0);	
}
else{

printf("\nAverage waiting time= %f\n",waiting_time*1.0/n);
printf("\nAverage turnaround time= %f\n",turn_time*1.0/n);

}}
}
else{
	printf("Wrong password\n\n");
}

}
else{
	printf("wrong username\n\n");
}
}

