#include<stdio.h>
#include<unistd.h>
#include<string.h>
#include<conio.h>
#include<time.h>
//#include<Windows.h>
void access(){
   	int ft1;int min,sec,hr;
	printf("\n\nSuccessfully Logged-In\n\n");
	printf("\n\n*****-----WELCOME SUDESH SHARMA-----*****\n\n");	
	int hour, minute, second;
	printf("\nEnter current time in 24HOUR format:\n");
	scanf("%02d:%02d:%02d",&hour,&minute,&second);
	if(hour>=12){
		printf("\nCannot give access at or after 12:00:00 PM\n");
		exit(0);
	}
	else if(hour<10){
		printf("\nToo early to access...pls login between 10:00:00 AM to 12:00:00 PM\n");
		exit(0);
  	}
	int ft=(((hour*60)+minute+(second/60))*60);
	printf("The time is = %02d:%02d:%02d ",hour,minute,second);
	//printf(" \n\nYou have 2hrs left\n");
	int i,m,n,tq,tq1;
	printf("\nEnter number of student queries\n");
	scanf("%d",&n);
	printf("Enter number of faculty queries\n");
	scanf("%d",&m);
	int sk=0,p=0;
	int hh[m],mm[m];
	int hh1[n],mm1[n];
	int q1[n],q2[m];
	int P[n],Pr[m],bt[n],at[n],rmt[n],bt1[m],at1[m],rt[m];
	printf("------STUDENT'S  QUERIES:------\n\n");
	for(i=0;i<n;i++){
		ef:
		printf("Enter query id for student query no. %d = ",i+1,"\n\n");
		printf("S");
		scanf("%d",&P[i]);
		q1[i]=P[i];
		printf("\n\nEnter Burst time for solving this query = ");
		scanf("%d",&bt[i]);
		printf("\n\nEnter it's Arrival time in 24HR FORMAT S%d =",P[i]);
		scanf("%02d:%02d",&hh1[i],&mm1[i]);
		//printf("%02d",hour);
		if(hh1[i]<hour){
			at[i]=0;
		}
		else if(hh1[i]==hour){
			if(mm1[i]>minute){
				at[i]=mm1[i]-minute;
			}
			else {
				at[i]=0;
			}
		}
		else if(hh1[i]==hour+1){
			at[i]=(mm1[i]+60)-minute;
		}
		else if(hh1[i]>=hour+2){
			printf("Not accepted");
			goto ef;
		}
		printf("\n\n");
	}
	printf("\n\n");
	printf("------FACULTY'S  QUERIES:------\n\n");
	for(i=0;i<m;i++){
		ff:
		printf("\n\nEnter query id for faculty query no. %d = ",i+1,"\n");
		printf("F");
		scanf("%d",&Pr[i]);
		q2[i]=Pr[i];
		printf("\n\nEnter Burst time for solving this query = ");
		scanf("%d",&bt1[i]);
		printf("\n\nEnter it's Arrival time in 24HR FORMAT F%d =",Pr[i]);
		scanf("%02d:%02d",&hh[i],&mm[i]);
		if(hh[i]<hour){
			at1[i]=0;
		}
		else if(hh[i]==hour){
			//at1[i]=minute-mm[i];
			if(mm[i]>minute){
				at1[i]=mm[i]-minute;}
			else {
				at1[i]=0;
			}
		}
		else if(hh[i]==hour+1){
			at1[i]=(mm[i]+60)-minute;
		}
		else if(hh[i]>=hour+2){
			printf("Not accepted");
			goto ff;
		}
	}
	printf("\n\n");
	printf("____________________________________________________\n");
	printf("|	STUDENT'S QUEUE	  Burst time	Arrival time|\n");
	printf("|___________________________________________________|\n");
	for(i=0;i<n;i++){
		printf("      	 S%d	    	  %d	    	 %d\n",P[i],bt[i],at[i]);
	}
	printf("____________________________________________________\n\n");

	printf("____________________________________________________\n");
	printf("|	FACULTY'S QUEUE	  Burst time	Arrival time|\n");
	printf("|___________________________________________________|\n");
	for(i=0;i<m;i++){
		printf("      	 F%d	    	  %d	    	 %02d\n",Pr[i],bt1[i],at1[i]);
	}
	printf("____________________________________________________\n\n");

	printf("\n\nGIVE PRIORITY FOR STUDENT QUERIES\n\n");
	int ch;
	scanf("%d",&ch);
	if(ch==1){
		printf("\n\nSINCE THERE ARE  MULTIPLE REQUESTS,SO YOU NEED TO GIVE A FAIR SHARE OF TIME\n\n");

		printf("Enter Time Quantum you want to give for each student query= ");
		scanf("%d",&tq);
		printf("\n\n Turnaround time means --> Total time taken to solve each query....\n\n");
		int t,remain,flag=0;
		int waiting_time=0,turn_time=0;
		remain=n;
		for(i=0;i<n;i++){
			rmt[i]=bt[i];
		}
		printf("\n\n------------SOLVING STUDENT QUERIES------------------\n\n");
		printf("\n\nProcess\t | Turnaround time | Waiting time\n\n");
		for(t=0,i=0;remain!=0;){
			if(rmt[i]<=tq && rmt[i]>0){
				t=t+rmt[i];
				rmt[i]=0;
				flag=1;
			}
			else if(rmt[i]>0){
				rmt[i]=rmt[i]-tq;
				t=t+tq;
			}
			if(rmt[i]==0 && flag==1){
				remain--;
				printf("S%d\t | \t%d\t | \t%d\n",i+1,t-at[i],t-at[i]-bt[i]);
				waiting_time=waiting_time+t-at[i]-bt[i];
				turn_time=turn_time+t-at[i];
				flag=0;
			}
			if(i==n-1)
				i=0;
			else if(at[i+1]<=t)
				i++;
			else
				i=0;
		}
		if(n==0){
			printf("\nAverage waiting time= %d\n",0);
			printf("\nAverage turnaround time= %d\n",0);	
		}
		else{
			printf("\nAverage waiting time= %f\n",waiting_time*1.0/n);
			printf("\nAverage turnaround time= %f\n",turn_time*1.0/n);
			p=turn_time/n;
		}
		printf("\n\n Enter Time Quantum you want to give for each faculty query= ");
		scanf("%d",&tq1);
		int t1,remain1,flag1=0;
		int waiting_time1=0,turn_time1=0;
		remain1=m;
		for(i=0;i<m;i++){
			rt[i]=bt1[i];
		}
		printf("\n\n------------SOLVING FACULTY QUERIES------------------\n\n");

		printf("\n\nProcess\t|Turnaround time|Waiting time\n\n");
		for(t1=0,i=0;remain1!=0;){
			if(rt[i]<=tq1 && rt[i]>0){
				t1=t1+rt[i];
				rt[i]=0;
				flag1=1;
			}
			else if(rt[i]>0){
				rt[i]=rt[i]-tq1;
				t1=t1+tq1;
			}
			if(rt[i]==0 && flag1==1){
				remain1--;
				printf("F%d\t|\t%d\t|\t%d\n",i+1,t1-at1[i],t1-at1[i]-bt1[i]);
				waiting_time1=waiting_time1+t1-at1[i]-bt1[i];
				turn_time1=turn_time1+t1-at1[i];
				flag1=0;
			}
			if(i==m-1)
				i=0;
			else if(at1[i+1]<=t1)
				i++;
			else
				i=0;
		}
		if(m==0){
			printf("\nAverage waiting time= %d\n",0);
			printf("\nAverage turnaround time= %d\n",0);	
		}
		else{
			printf("\nAverage waiting time= %f\n",waiting_time1*1.0/m);
			printf("\nAverage turnaround time= %f\n",turn_time1*1.0/m);
			sk=turn_time1/m;
		}
	}
	else if(ch==2){
		printf("\n\nSINCE THERE ARE  MULTIPLE REQUESTS,SO YOU NEED TO GIVE A FAIR SHARE OF TIME\n\n");
		printf("\n\n Enter Time Quantum you want to give for each faculty query= ");
		scanf("%d",&tq1);
		int t1,remain1,flag1=0;
		int waiting_time1=0,turn_time1=0;
		remain1=m;
		for(i=0;i<m;i++){
			rt[i]=bt1[i];
		}
		printf("\n\n------------SOLVING FACULTY QUERIES------------------\n\n");

		printf("\n\nProcess\t|Turnaround time|Waiting time\n\n");
		for(t1=0,i=0;remain1!=0;){
			if(rt[i]<=tq1 && rt[i]>0){
				t1=t1+rt[i];
				rt[i]=0;
				flag1=1;
			}
			else if(rt[i]>0){
				rt[i]=rt[i]-tq1;
				t1=t1+tq1;
			}
			if(rt[i]==0 && flag1==1){
				remain1--;
				printf("F%d\t|\t%d\t|\t%d\n",i+1,t1-at1[i],t1-at1[i]-bt1[i]);
				waiting_time1=waiting_time1+t1-at1[i]-bt1[i];
				turn_time1=turn_time1+t1-at1[i];
				flag1=0;
			}
			if(i==m-1)
				i=0;
			else if(at1[i+1]<=t1)
				i++;
			else
				i=0;
		}
		if(m==0){
			printf("\nAverage waiting time= %d\n",0);
			printf("\nAverage turnaround time= %d\n",0);	
		}
		else{
			printf("\nAverage waiting time= %f\n",waiting_time1*1.0/m);
			printf("\nAverage turnaround time= %f\n",turn_time1*1.0/m);
			sk=turn_time1/m;
		}
		printf("Enter Time Quantum you want to give for each student query= ");
		scanf("%d",&tq);
		int t,remain,flag=0;
		int waiting_time=0,turn_time=0;
		remain=n;
		for(i=0;i<n;i++){
			rmt[i]=bt[i];
		}
		printf("\n\n------------SOLVING STUDENT QUERIES------------------\n\n");

		printf("\n\nProcess\t | Turnaround time | Waiting time\n\n");
		for(t=0,i=0;remain!=0;){
			if(rmt[i]<=tq && rmt[i]>0){
				t=t+rmt[i];
				rmt[i]=0;
				flag=1;
			}
			else if(rmt[i]>0){
				rmt[i]=rmt[i]-tq;
				t=t+tq;
			}
			if(rmt[i]==0 && flag==1){
				remain--;
				printf("S%d\t | \t%d\t | \t%d\n",i+1,t-at[i],t-at[i]-bt[i]);
				waiting_time=waiting_time+t-at[i]-bt[i];
				turn_time=turn_time+t-at[i];
				flag=0;
			}
			if(i==n-1)
				i=0;
			else if(at[i+1]<=t)
				i++;
			else
				i=0;
		}
		if(n==0){
			printf("\nAverage waiting time= %d\n",0);
			printf("\nAverage turnaround time= %d\n",0);	
		}
		else{
			printf("\nAverage waiting time= %f\n",waiting_time*1.0/n);
			printf("\nAverage turnaround time= %f\n",turn_time*1.0/n);
			p=turn_time/n;
		}
	}
	printf("\n\nTotal Time he has taken for handling all the queries is: %d",(sk+p));
	printf("\n\n");
	ft1=(ft+(sk+p))*60;

	if(ft1>3600){
		min=ft1/60;
		sec=ft1%60;
		hr=min/60;
		min=min%60;
	}
	else{
		min=ft1/60;
		sec=ft1%60;
	}
	printf("\nALL THE QUERIES ARE HANDLED\n");
	printf("\nTime left for access id == %02d hr: %02d min: %02d sec\n",(12-(hour+1)),(60-(min+minute)),((sec+second)));
	printf("\nDO YOU STILL WANT TO STAY ON THE STUDENT QUERY SYSTEM ?\n");
	printf("\nPress 0 to Log Out and 1 to continue\n");
	int c;
	scanf("%d",&c);
	if(c==0){
		printf("\nLogged-Out\n");
		exit(0);
	}
	else if(c==1){
		if(hour==10){
			int h=hr+2;
			while(hr<h){
     		   printf("%02d : %02d : %02d\n",hour,(min+minute),(sec+second));
     		   fflush(stdout);
     		   sec++;
    		   //printf("%02d",hour);
    		    //update hour, minute and second
    		    if(sec==60){
					min+=1;      
					sec=0;
				}
    			if(min==60){
					hr+=1;
        	    	min=0;
        		}
        		if(hr==24){
        		    hr=0;
        		    min=0;
        		    sec=0;
        		}
        		sleep(1);
			}   //wait till 1 second
			printf("\nTIME OVER...SEE  U TOMORROW AT SAME TIME\n");
		}
		else if(hour==11){
			int h=hr+1;
			while(hr<h){
				printf("%02d : %02d : %02d\n",hour,(min+minute),(sec+second));
				fflush(stdout);
				sec++;
				//printf("%02d",hour);
		        //update hour, minute and second
				if(sec==60){
 		           min+=1;
					sec=0;
 	       		}
				if(min==60){
 		           hr+=1;
 		           min=0;
 		       }
 		       if(hr==24){
					hr=0;
					min=0;
					sec=0;
        		}
				sleep(1);
			}   //wait till 1 second
			printf("\nTIME OVER...SEE  U TOMORROW AT SAME TIME\n");
		}
	}
}
int main(){
	long d;	char h[5];
	char a,c[11];int o;int r=0,y=0,z=0;
	xy:
	char pass[]="yashu@29";//password to be entered
	pass:
	printf("\n\nENTER THE ID \n\n    ");
	scanf("%ld",&d);
	printf("\nENTER THE PASSWORD \n\n     ");
	while(1){  
		a=getch();
		if(a==13){
			printf("\n");
			break;
		}
		c[r]=a;
		printf("*");
		r++;
	}
	o=strcmp(c,pass);
	if(d==11610846){
		if(o==0){
			access();
		}
		else{
			y++;
			printf("\n\nWrong Password\n\n");
			while(y<3){
				goto xy;
			}
		}
	}
	else{
		z++;
		printf("\n\nWrong Username\n\n");
		while(z<3){
			goto xy;
		}		
	}
}
